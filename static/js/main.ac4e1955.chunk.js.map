{"version":3,"sources":["components/Contact/Context.js","components/Contact/Contact.js","components/Contact/Contacts.js","components/Layout/Header.js","components/Layout/TextInputGroup.js","components/Contact/Addcontact.js","components/pages/About.js","components/pages/Notfound.js","components/test/Test.js","components/Contact/EditContact.js","App.js","index.js"],"names":["Context","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","bind","color","to","Contacts","key","Header","Fragment","href","branding","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","Addcontact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","Test","title","body","console","log","fetch","then","response","json","Editcontact","updateContact","match","params","put","App","basename","process","exact","path","component","About","Notfound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac4e1955.chunk.js","sourcesContent":["import React, { Component, createContext } from 'react'\nimport axios from 'axios';\n\nconst Context = createContext();\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(\n                    contact => contact.id !== action.payload\n                )\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n        default:\n            return (\n                state\n            )\n    }\n}\n\nexport class Provider extends Component{\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount() {\n        \n        // USE \"async\" AND \"await\" TO REDUCE CODE FOR GETTING DATA FROM URL\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data})         \n    }\n    \n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from './Context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default class Contact extends Component {\n    state = {\n        showContactInfo: false\n    }\n        // IN THE ()=>{} WE HAVE TO PUT async BEFORE THE FUNCTION PARAMETERS\n    onDeleteClick = async (id, dispatch) => {\n        \n        // DELETE DATA FROM URL USING \"async\" AND \"await\"\n        // IF error OCCURES DURING delete AND IT CAN'T DELETE FROM DOM, USE THE try()... catch() \n        \n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\n    };\n    \n    render() {\n                    // DESTRUCTURING TYPE 2\n        const { id,name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                { value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-2 w-50 bg-light\">\n                            <h4>\n                                    {/* CHANGING STATE */}\n                                {name}\n                                <i className=\"fas fa-caret-down text-dark float-left mr-2\"\n                                    onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\n                                    style={{cursor:'pointer'}}\n                                />\n\n                                    {/* DELETE EVENT CLICKING */}\n                                <i className=\"fas fa-times float-right\"\n                                    onClick={this.onDeleteClick.bind(this,id,dispatch)}\n                                    style={{ cursor: 'pointer', color: 'red' }} />\n                                \n                                <Link to={`contact/edit/${id}`}>\n                                <i className=\"fas fa-pencil-alt float-right text-dark mr-3\"/>\n                            </Link>\n                            </h4>\n\n                            \n\n                                {/* // CHANGING STATE ID STATEMENT */}\n                            {showContactInfo ? (\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">Email: {email}</li>\n                                    <li className=\"list-group-item\">Contact : {phone}</li>\n                                </ul>\n                            ) : null}\n                        </div>\n                    )\n                }}\n            </Consumer>            \n        )\n    }\n}\n\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\n","import React, { Component } from 'react'\nimport Contact from '../Contact/Contact';\nimport { Consumer } from './Context';\n\nclass Contacts extends Component {   \n     render() {\n         return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <>\n                            <h6 className=\"display-4 mb-2\"><span className=\"text-danger\"> Contact</span> List</h6>\n                            {contacts.map(contact => (\n\n                                <Contact                    \n                                    // destructuring calling type-2\n                                    key={contact.id}\n                                    contact={contact}            \n                                />\n                            ))\n                            }\n                        </>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\nexport default Contacts;","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Header = (props) => {\n    return (\n        <React.Fragment>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-2 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{props.branding}</a>\n            </div>\n\n                <ul className=\"nav navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\" /> \n                            Home\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\" >\n                            <i className=\"fas fa-plus\" /> Add\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\" >\n                            <i className=\"fas fa-question\" /> About\n                        </Link>\n                    </li>  \n                </ul>\n        </nav>\n\n        </React.Fragment>\n    )\n}\nexport default Header;\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// RUN \"npm install classnames\" AND IMPORT classnames TO SUPPORT CLASSNAMES IN BOOTSTRAP TO DIAPLAY ERRORS\n\n\nexport const TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n            type={type}\n            name={name}\n            className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            />\n            {error && <div className=\"invalid-feedback\">\n                {error}\n            </div>}\n            \n        </div>\n    )\n}\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,  \n    error: PropTypes.string\n}\nTextInputGroup.defaultProps = {\n    type:\"text\"\n}","import React, { Component } from 'react'\nimport { Consumer } from './Context'\nimport { TextInputGroup } from '../Layout/TextInputGroup'\nimport axios from 'axios'\n\n\n\nexport default class Addcontact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors:{}\n    }\n        //  MULTIPLE EVENT HANDLER FOR ALLOW TYPING IN INPUT FIELDS\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    onSubmit = async (dispatch,e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        const { name, email, phone } = this.state;\n        \n        // CHECK FOR ERRORS AND VALIDATIONS\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is Required...!!' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is Required...!!' }});\n            return;\n\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone:  'Phone is Required...!!' }});\n        \n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n            // USING async AND await  TO ADD  DATA USIN TEMPORARY ID 11       \n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        \n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\n        \n            //for clear the textbox after submit \n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors:{}\n        })\n\n            // to Redirect ID or params\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        // console.log(errors);\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <>\n                            <div className=\"card\">\n                                <div className=\"card-header \">Add Contact</div>\n                                    <div className=\"card-body\">\n                                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                            <TextInputGroup\n                                                label=\"Name\"\n                                                name=\"name\"\n                                                placeholder=\"Enter Name...\"\n                                                value={name}\n                                                onChange={this.onChange}\n                                                error={errors.name}\n                                            />\n                                            <TextInputGroup\n                                                label=\"Email\"\n                                                name=\"email\"\n                                                type=\"email\"\n                                                placeholder=\"Enter Email...\"\n                                                value={email}\n                                                onChange={this.onChange}\n                                                error={errors.email}\n\n                                            />\n                                            <TextInputGroup\n                                                label=\"Phone\"\n                                                name=\"phone\"\n                                                placeholder=\"Enter Phone...\"\n                                                value={phone}\n                                                onChange={this.onChange}\n                                                error={errors.phone}\n                                            />\n                                            \n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-block btn-dark\"\n                                            value=\"Submit\"\n                                        />\n                                        </form>\n                                    </div>\n                            </div>\n                        </>\n                    )\n                }}\n            </Consumer>\n        )\n        \n    }\n}\n","import React from 'react'\n\nexport default (props)=> {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n\n             {/* //       TO GET ID OR PARAMS\n            <h1 className=\"display-4\">{props.match.params.id}</h1>\n            <h1 className=\"display-4\">{props.match.params.name}</h1> */}\n\n            <p className=\"lead\">Simple App to Manage Contacts </p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n               <span className=\"text-danger\"> 404</span> Page Not Found\n            </h1>\n            <p className=\"lead\"> Sorry, that page doesn't exist</p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\n\nexport default class Test extends Component {\n    state = {\n        title: \"\",\n        body: \"\"\n}\n    componentDidMount() {\n        console.log(\"Component Did Mount\")\n        \n            // JSON DATA GET\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n        .then(response => response.json())\n            .then(data => this.setState({\n                title: data.title,\n                body: data.body\n        }))\n    }\n\n\n    // componentWillMount() {\n    //     console.log(\"Component will Mount\")\n\n    // }\n    // componentDidUpdate() {\n    //     console.log(\"Component did Update\")\n    // }\n\n    //     //this is generally used in Redux\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log(\"Component will Recieve Props\")\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n    //     return {\n    //         test: 'something'\n    //     };\n    // }\n    \n    // getSnapshotBeforeUpdate = (prevProps, prevState) => {\n    //     console.log('getSnapshotBeforeUpdate')\n    // }\n    \n    render() {\n        const { title, body } = this.state;\n        return (\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Consumer } from './Context'\nimport { TextInputGroup } from '../Layout/TextInputGroup'\nimport axios from 'axios';\n\n\n\nexport default class Editcontact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors:{}\n    }\n        // USE componentDidMount() TO UPDATE CONTACT\n        \n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n    \n\n        //  MULTIPLE EVENT HANDLER FOR ALLOW TYPING IN INPUT FIELDS\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    onSubmit = async (dispatch,e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        const { name, email, phone } = this.state;\n        \n        // CHECK FOR ERRORS AND VALIDATIONS\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is Required...!!' } });\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is Required...!!' }});\n            return;\n\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone:  'Phone is Required...!!' }});\n        \n            return;\n        }\n            // UPDATE CONTACT partS\n        const updateContact = {\n            name,\n            email,\n            phone\n        }\n        const { id } = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n\n            //for clear the textbox after submit \n        this.setState({\n            name: \"\",\n            email: \"\",\n            phone: \"\",\n            errors:{}\n        })\n\n            // to Redirect ID or params\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n        // console.log(errors);\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <>\n                            <div className=\"card\">\n                                <div className=\"card-header \">Edit Contact</div>\n                                    <div className=\"card-body\">\n                                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                                            <TextInputGroup\n                                                label=\"Name\"\n                                                name=\"name\"\n                                                placeholder=\"Enter Name...\"\n                                                value={name}\n                                                onChange={this.onChange}\n                                                error={errors.name}\n                                            />\n                                            <TextInputGroup\n                                                label=\"Email\"\n                                                name=\"email\"\n                                                type=\"email\"\n                                                placeholder=\"Enter Email...\"\n                                                value={email}\n                                                onChange={this.onChange}\n                                                error={errors.email}\n\n                                            />\n                                            <TextInputGroup\n                                                label=\"Phone\"\n                                                name=\"phone\"\n                                                placeholder=\"Enter Phone...\"\n                                                value={phone}\n                                                onChange={this.onChange}\n                                                error={errors.phone}\n                                            />\n                                            \n                                        <input\n                                            type=\"submit\"\n                                            className=\"btn btn-block bg-dark text-white\"\n                                            value=\"Update Contact\"\n                                        />\n                                        </form>\n                                    </div>\n                            </div>\n                        </>\n                    )\n                }}\n            </Consumer>\n        )\n        \n    }\n}\n","import React, { Component } from 'react'\n\n    //INSTALL npm install react-router-dom TO USE REACT ROUTER, AND IMPORT...\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Contacts from './components/Contact/Contacts'\nimport Header from './components/Layout/Header'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Provider } from './components/Contact/Context';\nimport Addcontact from './components/Contact/Addcontact';\nimport About from './components/pages/About';\nimport Notfound from './components/pages/Notfound';\nimport Test from './components/test/Test';\nimport Editcontact from './components/Contact/EditContact';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              \n              {/* USE ROUTER, SWITCH AND ROUTE TO ADD COMPONENTS TO RUN ON DIFFERENT PAGES */}\n              <Switch>\n                <Route exact path=\"/\" \n                  component={Contacts} />\n                <Route exact path=\"/contact/add\" \n                  component={Addcontact} />\n                \n                {/* // to redirect on the page or pass ID */}\n                <Route exact path=\"/contact/edit/:id\" \n                  component={Editcontact} />\n                \n                <Route exact path=\"/about\" \n                  component={About} />\n                \n                <Route exact path=\"/test\" \n                  component={Test} />\n                <Route component={Notfound} />\n              </Switch>    \n            </div>   \n          </div>\n        </Router>\n      </Provider>\n    )\n      }\n    }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}